[package]
name = "secretrs"
version = "0.1.0-beta.0"
authors = ["Kent"]
license = "Unlicense"
repository = "https://github.com/kent-3/secret-rust/tree/main/secretrs"
description = "An extension of `cosmrs` for Secret."
readme = "README.md"
categories = ["cryptography", "cryptography::cryptocurrencies"]
keywords = ["blockchain", "cosmos"]
edition = "2021"
rust-version = "1.72"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[features]
default = ["bip32", "getrandom", "grpc-core"]
bip32 = ["cosmrs/bip32"]
rpc = ["cosmrs/rpc"]
getrandom = ["cosmrs/getrandom"]
# `grpc-core` enables use of gRPC clients
grpc-core = ["cosmrs/grpc-core", "secret-sdk-proto/grpc"]
# `grpc` enables the 'transport' feature of tonic (not compatible with wasm)
grpc = ["grpc-core", "cosmrs/grpc", "secret-sdk-proto/grpc-transport"]
# dev = ["tokio"]


[dependencies]
tonic-web-wasm-client = "0.5.1"

# blockchain
cosmrs = { version = "0.16.0" }
secret-sdk-proto = { version = "0.1.0", default-features = false, path = "../secret-sdk-proto" }
cosmwasm-std = { version = "=1.1.11", package = "secret-cosmwasm-std" }
bip32 = "0.5.1"
bip39 = "2.0.0"

# general
async-trait = "0.1.80"
serde = "1.0.198"
serde_json = "1.0.116"
nanorand = { version = "0.7.0", features = ["getrandom", "zeroize"] }
derive_more = { version = "1.0.0-beta", default-features = false, features = ["from"] }

# crypto
base64 = "0.22.0"
hex = "0.4.3"
hex-literal = "0.4.1"
hkdf = "0.12.4"
sha2 = "0.10.8"
aes-siv = "0.7.0"
x25519-dalek = { version = "2.0.1", features = ["static_secrets"] }

# errors
thiserror = "1.0.51"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tonic = { version = "0.11.0", features = ["tls", "tls-webpki-roots", "transport"] }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
color-eyre = "0.6"
regex = "1"
tokio = { version = "1.37", features = ["rt", "sync", "time", "macros"] }
tonic = { version = "0.11.0", features = ["tls", "tls-webpki-roots", "transport"] }

# wasm

[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom = { version = "0.2.14", features = ["js"] }
nanorand = { version = "0.7.0", features = ["getrandom", "zeroize"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
tokio = { version = "1.37", features = ["rt", "sync", "time", "macros"] }
tonic-web-wasm-client = "0.5.1"
wasm-bindgen-test = "0.3.42"

[[example]]
name = "encrypt"
path = "examples/encrypt.rs"

[[example]]
name = "query"
path = "examples/query.rs"
required-features = ["grpc"]

[[example]]
name = "tx"
path = "examples/tx.rs"
required-features = ["grpc"]

[[example]]
name = "contract_query"
path = "examples/contract_query.rs"
required-features = ["grpc"]
