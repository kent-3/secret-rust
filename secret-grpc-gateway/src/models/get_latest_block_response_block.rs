/*
 * Secret Network
 *
 * A REST interface for queries and transactions
 *
 * The version of the OpenAPI document: v1.12
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetLatestBlockResponseBlock {
    #[serde(rename = "header", skip_serializing_if = "Option::is_none")]
    pub header: Option<Box<crate::models::GetLatestBlockResponseBlockHeader>>,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<Box<crate::models::DataContainsTheSetOfTransactionsIncludedInTheBlock>>,
    #[serde(rename = "evidence", skip_serializing_if = "Option::is_none")]
    pub evidence: Option<Box<crate::models::GetLatestBlockResponseBlockEvidence>>,
    #[serde(rename = "last_commit", skip_serializing_if = "Option::is_none")]
    pub last_commit: Option<Box<crate::models::GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidenceConflictingBlockSignedHeaderCommit>>,
}

impl GetLatestBlockResponseBlock {
    pub fn new() -> GetLatestBlockResponseBlock {
        GetLatestBlockResponseBlock {
            header: None,
            data: None,
            evidence: None,
            last_commit: None,
        }
    }
}
