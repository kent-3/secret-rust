/*
 * Secret Network
 *
 * A REST interface for queries and transactions
 *
 * The version of the OpenAPI document: v1.12
 *
 * Generated by: https://openapi-generator.tech
 */

/// GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidence : LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidence {
    #[serde(rename = "conflicting_block", skip_serializing_if = "Option::is_none")]
    pub conflicting_block: Option<Box<crate::models::GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidenceConflictingBlock>>,
    #[serde(rename = "common_height", skip_serializing_if = "Option::is_none")]
    pub common_height: Option<String>,
    #[serde(rename = "byzantine_validators", skip_serializing_if = "Option::is_none")]
    pub byzantine_validators: Option<Vec<crate::models::GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidenceConflictingBlockValidatorSetValidatorsInner>>,
    #[serde(rename = "total_voting_power", skip_serializing_if = "Option::is_none")]
    pub total_voting_power: Option<String>,
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<String>,
}

impl GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidence {
    /// LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client.
    pub fn new() -> GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidence {
        GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidence {
            conflicting_block: None,
            common_height: None,
            byzantine_validators: None,
            total_voting_power: None,
            timestamp: None,
        }
    }
}
