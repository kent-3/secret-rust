/*
 * Secret Network
 *
 * A REST interface for queries and transactions
 *
 * The version of the OpenAPI document: v1.12
 *
 * Generated by: https://openapi-generator.tech
 */

/// GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidenceConflictingBlockSignedHeaderCommit : Commit contains the evidence that a block was committed by a set of validators.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidenceConflictingBlockSignedHeaderCommit {
    #[serde(rename = "height", skip_serializing_if = "Option::is_none")]
    pub height: Option<String>,
    #[serde(rename = "round", skip_serializing_if = "Option::is_none")]
    pub round: Option<i32>,
    #[serde(rename = "block_id", skip_serializing_if = "Option::is_none")]
    pub block_id: Option<Box<crate::models::BlockId1>>,
    #[serde(rename = "signatures", skip_serializing_if = "Option::is_none")]
    pub signatures: Option<Vec<crate::models::GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidenceConflictingBlockSignedHeaderCommitSignaturesInner>>,
}

impl GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidenceConflictingBlockSignedHeaderCommit {
    /// Commit contains the evidence that a block was committed by a set of validators.
    pub fn new() -> GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidenceConflictingBlockSignedHeaderCommit {
        GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidenceConflictingBlockSignedHeaderCommit {
            height: None,
            round: None,
            block_id: None,
            signatures: None,
        }
    }
}
