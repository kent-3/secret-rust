/*
 * Secret Network
 *
 * A REST interface for queries and transactions
 *
 * The version of the OpenAPI document: v1.12
 *
 * Generated by: https://openapi-generator.tech
 */

/// IbcCoreConnectionV1Counterparty : Counterparty defines the counterparty chain associated with a connection end.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IbcCoreConnectionV1Counterparty {
    /// identifies the client on the counterparty chain associated with a given connection.
    #[serde(rename = "client_id", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<String>,
    /// identifies the connection end on the counterparty chain associated with a given connection.
    #[serde(rename = "connection_id", skip_serializing_if = "Option::is_none")]
    pub connection_id: Option<String>,
    #[serde(rename = "prefix", skip_serializing_if = "Option::is_none")]
    pub prefix: Option<Box<crate::models::MerklePrefixIsMerklePathPrefixedToTheKeyTheConstructedKeyFromThePathAndTheKeyWillBeAppendPathKeyPathAppendPathKeyPrefixKey>>,
}

impl IbcCoreConnectionV1Counterparty {
    /// Counterparty defines the counterparty chain associated with a connection end.
    pub fn new() -> IbcCoreConnectionV1Counterparty {
        IbcCoreConnectionV1Counterparty {
            client_id: None,
            connection_id: None,
            prefix: None,
        }
    }
}
