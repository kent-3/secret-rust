/*
 * Secret Network
 *
 * A REST interface for queries and transactions
 *
 * The version of the OpenAPI document: v1.12
 *
 * Generated by: https://openapi-generator.tech
 */

/// VotesResponseVotesInner : Vote defines a vote on a governance proposal. A Vote consists of a proposal ID, the voter, and the vote option.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct VotesResponseVotesInner {
    #[serde(rename = "proposal_id", skip_serializing_if = "Option::is_none")]
    pub proposal_id: Option<String>,
    #[serde(rename = "voter", skip_serializing_if = "Option::is_none")]
    pub voter: Option<String>,
    /// Deprecated: Prefer to use `options` instead. This field is set in queries if and only if `len(options) == 1` and that option has weight 1. In all other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
    #[serde(rename = "option", skip_serializing_if = "Option::is_none")]
    pub option: Option<VoteOption>,
    #[serde(rename = "options", skip_serializing_if = "Option::is_none")]
    pub options: Option<Vec<crate::models::SinceCosmosSdk043Inner>>,
}

impl VotesResponseVotesInner {
    /// Vote defines a vote on a governance proposal. A Vote consists of a proposal ID, the voter, and the vote option.
    pub fn new() -> VotesResponseVotesInner {
        VotesResponseVotesInner {
            proposal_id: None,
            voter: None,
            option: None,
            options: None,
        }
    }
}

/// Deprecated: Prefer to use `options` instead. This field is set in queries if and only if `len(options) == 1` and that option has weight 1. In all other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum VoteOption {
    #[serde(rename = "VOTE_OPTION_UNSPECIFIED")]
    Unspecified,
    #[serde(rename = "VOTE_OPTION_YES")]
    Yes,
    #[serde(rename = "VOTE_OPTION_ABSTAIN")]
    Abstain,
    #[serde(rename = "VOTE_OPTION_NO")]
    No,
    #[serde(rename = "VOTE_OPTION_NO_WITH_VETO")]
    NoWithVeto,
}

impl Default for VoteOption {
    fn default() -> VoteOption {
        Self::Unspecified
    }
}
