/*
 * Secret Network
 *
 * A REST interface for queries and transactions
 *
 * The version of the OpenAPI document: v1.12
 *
 * Generated by: https://openapi-generator.tech
 */

/// CosmosTxV1beta1Tx : Tx is the standard type used for broadcasting transactions.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CosmosTxV1beta1Tx {
    #[serde(rename = "body", skip_serializing_if = "Option::is_none")]
    pub body: Option<Box<crate::models::BodyIsTheProcessableContentOfTheTransaction>>,
    #[serde(rename = "auth_info", skip_serializing_if = "Option::is_none")]
    pub auth_info: Option<Box<crate::models::AuthInfoIsTheAuthorizationRelatedContentOfTheTransactionSpecificallySignersSignerModesAndFee>>,
    /// signatures is a list of signatures that matches the length and order of AuthInfo's signer_infos to allow connecting signature meta information like public key and signing mode by position.
    #[serde(rename = "signatures", skip_serializing_if = "Option::is_none")]
    pub signatures: Option<Vec<String>>,
}

impl CosmosTxV1beta1Tx {
    /// Tx is the standard type used for broadcasting transactions.
    pub fn new() -> CosmosTxV1beta1Tx {
        CosmosTxV1beta1Tx {
            body: None,
            auth_info: None,
            signatures: None,
        }
    }
}
