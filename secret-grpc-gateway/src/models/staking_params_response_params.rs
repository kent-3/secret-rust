/*
 * Secret Network
 *
 * A REST interface for queries and transactions
 *
 * The version of the OpenAPI document: v1.12
 *
 * Generated by: https://openapi-generator.tech
 */

/// StakingParamsResponseParams : params holds all the parameters of this module.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct StakingParamsResponseParams {
    /// unbonding_time is the time duration of unbonding.
    #[serde(rename = "unbonding_time", skip_serializing_if = "Option::is_none")]
    pub unbonding_time: Option<String>,
    /// max_validators is the maximum number of validators.
    #[serde(rename = "max_validators", skip_serializing_if = "Option::is_none")]
    pub max_validators: Option<i64>,
    /// max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
    #[serde(rename = "max_entries", skip_serializing_if = "Option::is_none")]
    pub max_entries: Option<i64>,
    /// historical_entries is the number of historical entries to persist.
    #[serde(rename = "historical_entries", skip_serializing_if = "Option::is_none")]
    pub historical_entries: Option<i64>,
    /// bond_denom defines the bondable coin denomination.
    #[serde(rename = "bond_denom", skip_serializing_if = "Option::is_none")]
    pub bond_denom: Option<String>,
}

impl StakingParamsResponseParams {
    /// params holds all the parameters of this module.
    pub fn new() -> StakingParamsResponseParams {
        StakingParamsResponseParams {
            unbonding_time: None,
            max_validators: None,
            max_entries: None,
            historical_entries: None,
            bond_denom: None,
        }
    }
}
