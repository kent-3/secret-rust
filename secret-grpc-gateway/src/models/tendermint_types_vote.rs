/*
 * Secret Network
 *
 * A REST interface for queries and transactions
 *
 * The version of the OpenAPI document: v1.12
 *
 * Generated by: https://openapi-generator.tech
 */

/// TendermintTypesVote : Vote represents a prevote, precommit, or commit vote from validators for consensus.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TendermintTypesVote {
    /// SignedMsgType is a type of signed message in the consensus.   - SIGNED_MSG_TYPE_PREVOTE: Votes  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
    #[serde(rename = "height", skip_serializing_if = "Option::is_none")]
    pub height: Option<String>,
    #[serde(rename = "round", skip_serializing_if = "Option::is_none")]
    pub round: Option<i32>,
    #[serde(rename = "block_id", skip_serializing_if = "Option::is_none")]
    pub block_id: Option<Box<crate::models::BlockId1>>,
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<String>,
    #[serde(rename = "validator_address", skip_serializing_if = "Option::is_none")]
    pub validator_address: Option<String>,
    #[serde(rename = "validator_index", skip_serializing_if = "Option::is_none")]
    pub validator_index: Option<i32>,
    #[serde(rename = "signature", skip_serializing_if = "Option::is_none")]
    pub signature: Option<String>,
}

impl TendermintTypesVote {
    /// Vote represents a prevote, precommit, or commit vote from validators for consensus.
    pub fn new() -> TendermintTypesVote {
        TendermintTypesVote {
            r#type: None,
            height: None,
            round: None,
            block_id: None,
            timestamp: None,
            validator_address: None,
            validator_index: None,
            signature: None,
        }
    }
}

/// SignedMsgType is a type of signed message in the consensus.   - SIGNED_MSG_TYPE_PREVOTE: Votes  - SIGNED_MSG_TYPE_PROPOSAL: Proposals
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "SIGNED_MSG_TYPE_UNKNOWN")]
    Unknown,
    #[serde(rename = "SIGNED_MSG_TYPE_PREVOTE")]
    Prevote,
    #[serde(rename = "SIGNED_MSG_TYPE_PRECOMMIT")]
    Precommit,
    #[serde(rename = "SIGNED_MSG_TYPE_PROPOSAL")]
    Proposal,
}

impl Default for Type {
    fn default() -> Type {
        Self::Unknown
    }
}
