/*
 * Secret Network
 *
 * A REST interface for queries and transactions
 *
 * The version of the OpenAPI document: v1.12
 *
 * Generated by: https://openapi-generator.tech
 */

/// GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidenceConflictingBlockSignedHeaderCommitSignaturesInner : CommitSig is a part of the Vote included in a Commit.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidenceConflictingBlockSignedHeaderCommitSignaturesInner
{
    #[serde(rename = "block_id_flag", skip_serializing_if = "Option::is_none")]
    pub block_id_flag: Option<BlockIdFlag>,
    #[serde(rename = "validator_address", skip_serializing_if = "Option::is_none")]
    pub validator_address: Option<String>,
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<String>,
    #[serde(rename = "signature", skip_serializing_if = "Option::is_none")]
    pub signature: Option<String>,
}

impl GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidenceConflictingBlockSignedHeaderCommitSignaturesInner {
    /// CommitSig is a part of the Vote included in a Commit.
    pub fn new() -> GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidenceConflictingBlockSignedHeaderCommitSignaturesInner {
        GetLatestBlockResponseBlockEvidenceEvidenceInnerLightClientAttackEvidenceConflictingBlockSignedHeaderCommitSignaturesInner {
            block_id_flag: None,
            validator_address: None,
            timestamp: None,
            signature: None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BlockIdFlag {
    #[serde(rename = "BLOCK_ID_FLAG_UNKNOWN")]
    Unknown,
    #[serde(rename = "BLOCK_ID_FLAG_ABSENT")]
    Absent,
    #[serde(rename = "BLOCK_ID_FLAG_COMMIT")]
    Commit,
    #[serde(rename = "BLOCK_ID_FLAG_NIL")]
    Nil,
}

impl Default for BlockIdFlag {
    fn default() -> BlockIdFlag {
        Self::Unknown
    }
}
