/*
 * Secret Network
 *
 * A REST interface for queries and transactions
 *
 * The version of the OpenAPI document: v1.12
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct TxsGetResponse {
    #[serde(rename = "total_count", skip_serializing_if = "Option::is_none")]
    pub total_count: Option<f32>,
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<f32>,
    #[serde(rename = "page_number", skip_serializing_if = "Option::is_none")]
    pub page_number: Option<f32>,
    #[serde(rename = "page_total", skip_serializing_if = "Option::is_none")]
    pub page_total: Option<f32>,
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<f32>,
    #[serde(rename = "txs", skip_serializing_if = "Option::is_none")]
    pub txs: Option<Vec<crate::models::TxsHashGetResponse>>,
}

impl TxsGetResponse {
    pub fn new() -> TxsGetResponse {
        TxsGetResponse {
            total_count: None,
            count: None,
            page_number: None,
            page_total: None,
            limit: None,
            txs: None,
        }
    }
}
